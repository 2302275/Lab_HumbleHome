name: UI Integration Tests

on:
  push:
    branches: [main]
  pull_request:

jobs:
  selenium-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Install system dependencies for Chrome
      - name: Install Chrome
        run: |
          sudo apt update
          sudo apt install -y wget gnupg unzip
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome-stable_current_amd64.deb

      - name: Ensure log directory exists and has proper permissions
        run: |
          mkdir -p humblehome/var/log/humblehome
          chmod -R 777 humblehome/var/log/humblehome

      # Setup Python and dependencies
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install Python dependencies
        run: |
          pip install -r humblehome/backend/requirements.txt
          pip install selenium webdriver-manager

      # Start backend/frontend/nginx locally
      - name: Start app with Docker Compose
        run: docker compose up -d
        working-directory: humblehome

      # Check container status (optional but useful)
      - name: Show Docker containers status
        run: docker compose ps
        working-directory: humblehome

      # Wait for app to be ready (curl retries localhost)
      - name: Wait for app to be ready
        run: |
          sleep 10
          curl --retry 10 --retry-connrefused --retry-delay 5 http://localhost

      # Run the test
      - name: Run Login/Register Tests
        run: python tests/selenium/ui_test.py
        working-directory: humblehome/selenium/backend

      - name: Run Checkout Tests
        run: python tests/selenium/checkout_test.py
        working-directory: humblehome/selenium/backend

      - name: Run Profile Update Tests
        run: python tests/selenium/updated_profile_test.py
        working-directory: humblehome/selenium/backend

      # On failure, print logs and upload artifacts
      - name: Show Docker Compose logs on failure
        if: failure()
        run: docker compose logs --tail=100
        working-directory: humblehome

      - name: Upload test artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: selenium-artifacts
          path: humblehome/backend/artifacts/
