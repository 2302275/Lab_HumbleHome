name: Lint & Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install React dependencies
        working-directory: humblehome/frontend
        run: npm ci

      - name: Run ESLint
        working-directory: humblehome/frontend
        run: npx eslint src --max-warnings=0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Flask dependencies
        working-directory: humblehome/backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 black

      - name: Run flake8
        working-directory: humblehome/backend
        run: flake8 .

      - name: Run black check
        working-directory: humblehome/backend
        run: black --check .

  test-docker:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build and Start Docker Containers
        run: docker compose up --build -d
        working-directory: humblehome

      - name: Wait for startup
        run: sleep 10

      - name: Test React App Homepage
        run: |
          curl -s -o response.html http://localhost:3000/
          grep "<title>React App</title>" response.html

      - name: Stop Docker Containers
        run: docker compose down
        working-directory: humblehome

  dependency-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "humblehome"
          path: "humblehome"
          format: "HTML"
          out: "dependency-check-report"

      - name: Upload Dependency Report
        uses: actions/upload-artifact@v4
        with:
          name: Dependency-Check-Report
          path: dependency-check-report

  sonarqube:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for full SonarQube analysis

      - name: Run SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=humblehome
            -Dsonar.branch.name=main
